"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withTime = exports.withGroup = exports.withConsole = exports.warn = exports.trace = exports.timeLog = exports.time = exports.table = exports.setConsole = exports.log = exports.info = exports.group = exports.error = exports.dirxml = exports.dir = exports.debug = exports.countReset = exports.count = exports.consoleWith = exports.clear = exports.assert = exports.TypeId = void 0;
var internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("@effect/io/internal/console"));
var defaultConsole = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("@effect/io/internal/defaultServices/console"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 * @since 1.0.0
 * @category type ids
 */
const TypeId = defaultConsole.TypeId;
/**
 * @since 1.0.0
 * @category default services
 */
exports.TypeId = TypeId;
const withConsole = internal.withConsole;
/**
 * @since 1.0.0
 * @category default services
 */
exports.withConsole = withConsole;
const setConsole = internal.setConsole;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.setConsole = setConsole;
const consoleWith = internal.consoleWith;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.consoleWith = consoleWith;
const assert = internal.assert;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.assert = assert;
const clear = internal.clear;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.clear = clear;
const count = internal.count;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.count = count;
const countReset = internal.countReset;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.countReset = countReset;
const debug = internal.debug;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.debug = debug;
const dir = internal.dir;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.dir = dir;
const dirxml = internal.dirxml;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.dirxml = dirxml;
const error = internal.error;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.error = error;
const group = internal.group;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.group = group;
const info = internal.info;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.info = info;
const log = internal.log;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.log = log;
const table = internal.table;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.table = table;
const time = internal.time;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.time = time;
const timeLog = internal.timeLog;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.timeLog = timeLog;
const trace = internal.trace;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.trace = trace;
const warn = internal.warn;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.warn = warn;
const withGroup = internal.withGroup;
/**
 * @since 1.0.0
 * @category accessor
 */
exports.withGroup = withGroup;
const withTime = internal.withTime;
exports.withTime = withTime;
//# sourceMappingURL=Console.js.map